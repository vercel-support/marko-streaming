{"version":3,"file":"route.marko-DY-tRkOI.js","sources":["../../../src/routes/stream/+page.marko"],"sourcesContent":["<div class=\"stream-container\">\n  <header>\n    <h1>Streaming Route Demo</h1>\n    <p>Real-time server-sent events from <code>/stream</code></p>\n  </header>\n  \n  <main>\n    <div class=\"controls\">\n      <button id=\"startBtn\" onclick=\"startStream()\">Start Stream</button>\n      <button id=\"stopBtn\" onclick=\"stopStream()\" disabled>Stop Stream</button>\n      <button id=\"clearBtn\" onclick=\"clearMessages()\">Clear Messages</button>\n    </div>\n    \n    <div class=\"status\">\n      <span id=\"status\">Disconnected</span>\n      <span id=\"messageCount\">Messages: 0</span>\n    </div>\n    \n    <div class=\"messages\" id=\"messages\">\n      <p class=\"info\">Click \"Start Stream\" to begin receiving real-time updates</p>\n    </div>\n  </main>\n</div>\n\n<style>\n  .stream-container {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 2rem;\n    font-family: system-ui, sans-serif;\n  }\n  \n  header {\n    text-align: center;\n    margin-bottom: 2rem;\n  }\n  \n  h1 {\n    color: #fff;\n    margin-bottom: 0.5rem;\n  }\n  \n  p {\n    color: #ccc;\n    margin: 0;\n  }\n  \n  code {\n    background: rgba(255, 255, 255, 0.1);\n    padding: 0.2rem 0.4rem;\n    border-radius: 0.25rem;\n    color: #fc0;\n  }\n  \n  .controls {\n    display: flex;\n    gap: 1rem;\n    margin-bottom: 1rem;\n    justify-content: center;\n  }\n  \n  button {\n    padding: 0.75rem 1.5rem;\n    background: #09c;\n    color: white;\n    border: none;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    font-size: 1rem;\n    transition: background 0.2s;\n  }\n  \n  button:hover:not(:disabled) {\n    background: #08a;\n  }\n  \n  button:disabled {\n    background: #555;\n    cursor: not-allowed;\n  }\n  \n  .status {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 0.5rem;\n    margin-bottom: 1rem;\n  }\n  \n  #status {\n    font-weight: bold;\n  }\n  \n  #status.connected {\n    color: #4ade80;\n  }\n  \n  #status.disconnected {\n    color: #f87171;\n  }\n  \n  .messages {\n    background: rgba(0, 0, 0, 0.3);\n    border-radius: 0.5rem;\n    padding: 1rem;\n    height: 400px;\n    overflow-y: auto;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n  }\n  \n  .message {\n    padding: 0.75rem;\n    margin-bottom: 0.5rem;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 0.25rem;\n    border-left: 3px solid #09c;\n  }\n  \n  .message-time {\n    font-size: 0.8rem;\n    color: #999;\n    margin-bottom: 0.25rem;\n  }\n  \n  .message-content {\n    color: #fff;\n  }\n  \n  .message-data {\n    font-size: 0.9rem;\n    color: #ccc;\n    margin-top: 0.25rem;\n    font-family: monospace;\n  }\n  \n  .info {\n    text-align: center;\n    color: #999;\n    font-style: italic;\n  }\n  \n  .error {\n    color: #f87171;\n    background: rgba(248, 113, 113, 0.1);\n    border-left-color: #f87171;\n  }\n</style>\n\n<script>\n  let eventSource = null;\n  let messageCount = 0;\n  \n  function startStream() {\n    if (eventSource) {\n      eventSource.close();\n    }\n    \n    const startBtn = document.getElementById('startBtn');\n    const stopBtn = document.getElementById('stopBtn');\n    const status = document.getElementById('status');\n    \n    startBtn.disabled = true;\n    stopBtn.disabled = false;\n    status.textContent = 'Connecting...';\n    status.className = '';\n    \n    eventSource = new EventSource('/stream');\n    \n    eventSource.onopen = function() {\n      status.textContent = 'Connected';\n      status.className = 'connected';\n    };\n    \n    eventSource.onmessage = function(event) {\n      try {\n        const data = JSON.parse(event.data);\n        addMessage(data);\n        messageCount++;\n        updateMessageCount();\n      } catch (error) {\n        console.error('Error parsing message:', error);\n      }\n    };\n    \n    eventSource.onerror = function() {\n      status.textContent = 'Connection Error';\n      status.className = 'disconnected';\n      startBtn.disabled = false;\n      stopBtn.disabled = true;\n    };\n    \n    eventSource.onclose = function() {\n      status.textContent = 'Disconnected';\n      status.className = 'disconnected';\n      startBtn.disabled = false;\n      stopBtn.disabled = true;\n    };\n  }\n  \n  function stopStream() {\n    if (eventSource) {\n      eventSource.close();\n      eventSource = null;\n    }\n    \n    const startBtn = document.getElementById('startBtn');\n    const stopBtn = document.getElementById('stopBtn');\n    const status = document.getElementById('status');\n    \n    startBtn.disabled = false;\n    stopBtn.disabled = true;\n    status.textContent = 'Disconnected';\n    status.className = 'disconnected';\n  }\n  \n  function addMessage(data) {\n    const messages = document.getElementById('messages');\n    const messageDiv = document.createElement('div');\n    messageDiv.className = 'message';\n    \n    if (data.final) {\n      messageDiv.classList.add('error');\n    }\n    \n    const time = new Date(data.timestamp || Date.now()).toLocaleTimeString();\n    \n    messageDiv.innerHTML = `\n      <div class=\"message-time\">${time}</div>\n      <div class=\"message-content\">${data.message}</div>\n      ${data.randomValue !== undefined ? `<div class=\"message-data\">Random Value: ${data.randomValue}</div>` : ''}\n      ${data.id !== undefined ? `<div class=\"message-data\">Message ID: ${data.id}</div>` : ''}\n    `;\n    \n    messages.appendChild(messageDiv);\n    messages.scrollTop = messages.scrollHeight;\n    \n    // Remove info message if it exists\n    const info = messages.querySelector('.info');\n    if (info) {\n      info.remove();\n    }\n  }\n  \n  function clearMessages() {\n    const messages = document.getElementById('messages');\n    messages.innerHTML = '<p class=\"info\">Messages cleared</p>';\n    messageCount = 0;\n    updateMessageCount();\n  }\n  \n  function updateMessageCount() {\n    const messageCountEl = document.getElementById('messageCount');\n    messageCountEl.textContent = `Messages: ${messageCount}`;\n  }\n  \n  // Clean up on page unload\n  window.addEventListener('beforeunload', function() {\n    if (eventSource) {\n      eventSource.close();\n    }\n  });\n</script>\n"],"names":["window","addEventListener"],"mappings":"iDAkQEA,OAAOC,iBAAiB,eAAgB,UAAW,CAInD,CAAC,CAAE,CAAA"}